{"ast":null,"code":"var _jsxFileName = \"/home/tunahan/Desktop/portfolioProjects/CV-generator/CV-generator/src/mainContent/overviewPro.js\";\nimport React from \"react\";\n\n// this is where the segments are rendered based on the state proTasks.\n// it parses through each element and grabs the bulletpoints, company name, role and date of work.\n// it also adds a delete and edit button so the user can later delete/edit that segment.\n// the bulletpoints require their own map method, since there are multiple bulletpoints stored in an array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverviewPro = props => {\n  const tasks = props.tasks;\n  const handleRemove = props.handleRemove;\n  const handleEdit = props.handleEdit;\n  const hideDeleteEdit = props.hideDeleteEdit;\n  function reverseString(str) {\n    return str.split('').reverse().join('');\n  }\n  const updatedTasks = tasks.map((task, index) => {\n    function NoteList(props) {\n      const notes = task.notes;\n      const noteItems = notes.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: element.note\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: noteItems\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"segment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerOfDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperPartProfessional\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"innerDiv1\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [task.company, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"innerDiv2\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: task.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"innerDiv3\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [reverseString(task.dateStart), \" \", reverseString(task.dateEnd)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: hideDeleteEdit ? {\n                display: 'none'\n              } : {\n                display: 'block'\n              },\n              className: \"deleteButton\",\n              onClick: () => handleRemove(task.id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: hideDeleteEdit ? {\n                display: 'none'\n              } : {\n                display: 'block'\n              },\n              className: \"editButton\",\n              onClick: () => handleEdit(task.id),\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(NoteList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: updatedTasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c = OverviewPro;\nexport default OverviewPro;\nvar _c;\n$RefreshReg$(_c, \"OverviewPro\");","map":{"version":3,"names":["React","OverviewPro","props","tasks","handleRemove","handleEdit","hideDeleteEdit","reverseString","str","split","reverse","join","updatedTasks","map","task","index","NoteList","notes","noteItems","element","note","id","company","position","dateStart","dateEnd","display"],"sources":["/home/tunahan/Desktop/portfolioProjects/CV-generator/CV-generator/src/mainContent/overviewPro.js"],"sourcesContent":["import React from \"react\"\n\n// this is where the segments are rendered based on the state proTasks.\n// it parses through each element and grabs the bulletpoints, company name, role and date of work.\n// it also adds a delete and edit button so the user can later delete/edit that segment.\n// the bulletpoints require their own map method, since there are multiple bulletpoints stored in an array\n\nconst OverviewPro = (props) => {\n\n    const tasks = props.tasks\n    const handleRemove = props.handleRemove\n    const handleEdit = props.handleEdit\n    const hideDeleteEdit = props.hideDeleteEdit\n    function reverseString(str) {\n  return str.split('').reverse().join('');\n}\n\n\n    const updatedTasks = tasks.map((task, index) => {\n\n        function NoteList(props) {\n            const notes = task.notes\n            const noteItems = notes.map((element, index) => {\n                return <li key={element.id}>{element.note}</li> \n            })\n            return (\n                <ul key={index}>\n                    {noteItems}\n                </ul>\n            )\n        }\n\n        return <div key={index} className=\"segment\">\n            <div className=\"headerOfDiv\">\n            <div className=\"upperPartProfessional\">\n                <div className=\"innerDiv1\"><b>{task.company} </b></div>\n                <div className=\"innerDiv2\"><b>{task.position}</b></div>\n                <div className=\"innerDiv3\"><b>{reverseString(task.dateStart)} {reverseString(task.dateEnd)}</b></div>\n                <div className=\"buttons\">\n                <button style={hideDeleteEdit ? {display: 'none'} : {display: 'block'}} className=\"deleteButton\" onClick={() => handleRemove(task.id)} >delete</button>\n                <button style={hideDeleteEdit ? {display: 'none'} : {display: 'block'}} className=\"editButton\" onClick={() => handleEdit(task.id)} >edit</button>\n            </div>\n            </div>\n\n            <div><NoteList/></div>\n\n\n        </div>\n        </div>\n\n\n    })\n\n    return (\n        <div>\n            {updatedTasks}\n        </div>\n    )\n}\n\nexport default OverviewPro"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AAAA;AAEA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE3B,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;EACzB,MAAMC,YAAY,GAAGF,KAAK,CAACE,YAAY;EACvC,MAAMC,UAAU,GAAGH,KAAK,CAACG,UAAU;EACnC,MAAMC,cAAc,GAAGJ,KAAK,CAACI,cAAc;EAC3C,SAASC,aAAa,CAACC,GAAG,EAAE;IAC9B,OAAOA,GAAG,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,EAAE,CAAC;EACzC;EAGI,MAAMC,YAAY,GAAGT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAE5C,SAASC,QAAQ,CAACd,KAAK,EAAE;MACrB,MAAMe,KAAK,GAAGH,IAAI,CAACG,KAAK;MACxB,MAAMC,SAAS,GAAGD,KAAK,CAACJ,GAAG,CAAC,CAACM,OAAO,EAAEJ,KAAK,KAAK;QAC5C,oBAAO;UAAA,UAAsBI,OAAO,CAACC;QAAI,GAAzBD,OAAO,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAAqB;MACnD,CAAC,CAAC;MACF,oBACI;QAAA,UACKH;MAAS,GADLH,KAAK;QAAA;QAAA;QAAA;MAAA,QAET;IAEb;IAEA,oBAAO;MAAiB,SAAS,EAAC,SAAS;MAAA,uBACvC;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC5B;UAAK,SAAS,EAAC,uBAAuB;UAAA,wBAClC;YAAK,SAAS,EAAC,WAAW;YAAA,uBAAC;cAAA,WAAID,IAAI,CAACQ,OAAO,EAAC,GAAC;YAAA;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACvD;YAAK,SAAS,EAAC,WAAW;YAAA,uBAAC;cAAA,UAAIR,IAAI,CAACS;YAAQ;cAAA;cAAA;cAAA;YAAA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACvD;YAAK,SAAS,EAAC,WAAW;YAAA,uBAAC;cAAA,WAAIhB,aAAa,CAACO,IAAI,CAACU,SAAS,CAAC,EAAC,GAAC,EAACjB,aAAa,CAACO,IAAI,CAACW,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACrG;YAAK,SAAS,EAAC,SAAS;YAAA,wBACxB;cAAQ,KAAK,EAAEnB,cAAc,GAAG;gBAACoB,OAAO,EAAE;cAAM,CAAC,GAAG;gBAACA,OAAO,EAAE;cAAO,CAAE;cAAC,SAAS,EAAC,cAAc;cAAC,OAAO,EAAE,MAAMtB,YAAY,CAACU,IAAI,CAACO,EAAE,CAAE;cAAA,UAAE;YAAM;cAAA;cAAA;cAAA;YAAA,QAAS,eACvJ;cAAQ,KAAK,EAAEf,cAAc,GAAG;gBAACoB,OAAO,EAAE;cAAM,CAAC,GAAG;gBAACA,OAAO,EAAE;cAAO,CAAE;cAAC,SAAS,EAAC,YAAY;cAAC,OAAO,EAAE,MAAMrB,UAAU,CAACS,IAAI,CAACO,EAAE,CAAE;cAAA,UAAE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QAC/I;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eAEN;UAAA,uBAAK,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IAGpB,GAfWN,KAAK;MAAA;MAAA;MAAA;IAAA,QAgBhB;EAGV,CAAC,CAAC;EAEF,oBACI;IAAA,UACKH;EAAY;IAAA;IAAA;IAAA;EAAA,QACX;AAEd,CAAC;AAAA,KAnDKX,WAAW;AAqDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}